name: test

on:
  push:

env:
  ARTIFACT_NAME: html.tar.gz

jobs:
  upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        envs: [dev-eu, dev-us, dev-cn, stg-eu, stg-us, prd, prd-cn]
    steps:
      # version
      - name: Set VERSION env
        run: echo "VERSION=TEST_$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
      - name: artifact version
        run: |
          echo "${{ env.VERSION }}" > version.txt
          cat version.txt
      - name: Upload artifact version
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: |
            version.txt

      # html file
      - name: Replace 'self_url' on testfile.html
        run: |
          sed -i "s|{{self_url}}|https://${{ matrix.envs }}-test.com|g" testfile.html
          cat testfile.html          
      - name: compression to artifacts
        run: tar -czf html.tar.gz testfile.html
      - name: Upload artifact version
        uses: actions/upload-artifact@v4
        with:
          name: html-${{ matrix.envs }}
          path: |
            ./${{ env.ARTIFACT_NAME }}

  build:
    needs: [ upload ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        envs: [dev-eu, dev-us, dev-cn, stg-eu, stg-us, prd, prd-cn]
    steps:
      - name: Download artifact version
        uses: actions/download-artifact@v4
        with:
          name: version
          path: |
            ./artifacts
      - name: check
        run: |
          cd artifacts
          pwd
          ls -al
          cat version.txt

      - name: Build docker image
        run: |
          echo "Build docker image"
          IMAGE_TAG=$(cat version.txt)
          echo "Using version: $IMAGE_TAG"

          # docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
          # docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          # echo "Image pushed: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"