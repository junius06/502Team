name: test

on:
  push:

env:
  ARTIFACT_NAME: html.tar.gz

jobs:
  artifacts-version:
    runs-on: ubuntu-latest
    steps:
      # version
      - name: Set VERSION env
        run: echo "VERSION=TEST_$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
      - name: artifact version
        run: |
          echo "${{ env.VERSION }}" > versions.txt
          cat versions.txt
      - name: Upload artifact version
        uses: actions/upload-artifact@v4
        with:
          name: versions
          path: versions.txt

  dev-build:
    needs: [ artifacts-version ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        envs: [dev-eu, dev-us, dev-cn]
    env:
      NEXT_PUBLIC_ENVIRONMENT: ${{ secrets.DEV_NEXT_PUBLIC_ENVIRONMENT }}
      NEXT_PUBLIC_SA_URL: ${{ secrets.NEXT_PUBLIC_SA_URL_CN }}
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: set url variables
        id: devURL
        run: |
          if [ "${{ matrix.envs }}" = "dev-eu" ] || [ "${{ matrix.envs }}" = "dev-us" ]; then
            echo "URL=https://${{ matrix.envs }}-test.com" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.envs }}" = "dev-cn" ]; then
            echo "URL=https://dev-test.cn" >> $GITHUB_OUTPUT
          fi
      - name: verify variables
        run: |
          ENV_VAR_LIST=(NEXT_PUBLIC_ENVIRONMENT NEXT_PUBLIC_SA_URL)
          for ENV_VAR in "${ENV_VAR_LIST}"
          do
            echo '::'_${ENV_VAR}
            if [ -z "${!ENV_VAR}" ]; then
              echo "${ENV_VAR} is empty"
            else
              echo "read ${ENV_VAR}"
            fi
          done
      - name: Replace 'self_url' on testfile.html
        run: |
          sed -i "s|{{self_url}}|${{ steps.devURL.outputs.URL }}|g" testfile.html
          cat testfile.html
      - name: compression to artifacts
        run: tar -czf html.tar.gz testfile.html
      - name: Upload artifact version
        uses: actions/upload-artifact@v4
        with:
          name: html-${{ matrix.envs }}
          path: |
            ./${{ env.ARTIFACT_NAME }}

  stg-build:
    needs: [ artifacts-version ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        envs: [stg-eu, stg-us]
    env:
      NEXT_PUBLIC_ENVIRONMENT: ${{ secrets.STG_NEXT_PUBLIC_ENVIRONMENT }}
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: set url variables
        id: stgURL
        run: |
          if [ "${{ matrix.envs }}" = "stg-eu" ] || [ "${{ matrix.envs }}" = "stg-us" ]; then
            echo "URL=https://${{ matrix.envs }}-test.com" >> $GITHUB_OUTPUT
          fi
      - name: verify variables
        run: |
          ENV_VAR_LIST=(NEXT_PUBLIC_ENVIRONMENT NEXT_PUBLIC_SA_URL)
          for ENV_VAR in "${ENV_VAR_LIST}"
          do
            echo '::'_${ENV_VAR}
            if [ -z "${!ENV_VAR}" ]; then
              echo "${ENV_VAR} is empty"
            else
              echo "read ${ENV_VAR}"
            fi
          done
      - name: Replace 'self_url' on testfile.html
        run: |
          sed -i "s|{{self_url}}|${{ steps.stgURL.outputs.URL }}|g" testfile.html
          cat testfile.html
      - name: compression to artifacts
        run: tar -czf html.tar.gz testfile.html
      - name: Upload artifact version
        uses: actions/upload-artifact@v4
        with:
          name: html-${{ matrix.envs }}
          path: |
            ./${{ env.ARTIFACT_NAME }}

  prd-build:
    needs: [ artifacts-version ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        envs: [prd, prd-cn]
    env:
      NEXT_PUBLIC_ENVIRONMENT: ${{ secrets.PRD_NEXT_PUBLIC_ENVIRONMENT }}
      NEXT_PUBLIC_SA_URL: ${{ secrets.NEXT_PUBLIC_SA_URL_CN }}
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: set url variables
        id: prdURL
        run: |
          if [ "${{ matrix.envs }}" = "prd" ]; then
            echo "URL=https://test.com" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.envs }}" = "prd-cn" ]; then
            echo "URL=https://test.cn" >> $GITHUB_OUTPUT
          fi
      - name: verify variables
        run: |
          ENV_VAR_LIST=(NEXT_PUBLIC_ENVIRONMENT NEXT_PUBLIC_SA_URL)
          for ENV_VAR in "${ENV_VAR_LIST}"
          do
            echo '::'_${ENV_VAR}
            if [ -z "${!ENV_VAR}" ]; then
              echo "${ENV_VAR} is empty"
            else
              echo "read ${ENV_VAR}"
            fi
          done
      - name: Replace 'self_url' on testfile.html
        run: |
          sed -i "s|{{self_url}}|${{ steps.prdURL.outputs.URL }}|g" testfile.html
          cat testfile.html
      - name: compression to artifacts
        run: tar -czf html.tar.gz testfile.html
      - name: Upload artifact version
        uses: actions/upload-artifact@v4
        with:
          name: html-${{ matrix.envs }}
          path: |
            ./${{ env.ARTIFACT_NAME }}

  image-build:
    needs: [ dev-build ]
    runs-on: ubuntu-latest
    env:
      ECR_STG_REGISTRY: 1234
      ECR_STG_REPOSITORY: test
    strategy:
      matrix:
        envs: [dev-eu, dev-us, dev-cn]
    steps:
      - name: Download artifact version
        uses: actions/download-artifact@v4
        with:
          name: versions
          path: |
            ./artifacts
      - name: check
        run: |
          cd artifacts
          pwd
          ls -al
          cat versions.txt

      - name: Build docker image
        run: |
          echo "Build docker image"
          IMAGE_TAG=$(cat ./artifacts/versions.txt)
          echo "Using version: $IMAGE_TAG"

          # docker build -t ${{ env.ECR_STG_REGISTRY }}/${{ env.ECR_STG_REPOSITORY }}:$IMAGE_TAG .
          # docker push ${{ env.ECR_STG_REGISTRY }}/${{ env.ECR_STG_REPOSITORY }}:$IMAGE_TAG
          # echo "Image pushed: ${{ env.ECR_STG_REGISTRY }}/${{ env.ECR_STG_REPOSITORY }}:$IMAGE_TAG"